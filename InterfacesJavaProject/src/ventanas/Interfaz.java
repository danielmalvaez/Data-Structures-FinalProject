/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

/**
 * Imports
 */
import java.awt.event.ActionListener;
import java.awt.*;
import javax.swing.Timer;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.*;
import java.util.*;

/**
 *
 * @author Axel Daniel Malváez Flores
 * @version 1.0
 */
public class Interfaz extends javax.swing.JFrame {
    
    Timer t;
    int x = 0;
    private final ActionListener ac;
    private File[] arrDocs;
    private Menu menu;
    ArrayList<String>[] stringList = null;
    Hashtable<String, Pair<String, Double>> ht = null;
    ArrayList<Pair<String, Double>>[] arrTF = null;
    ArrayList<Pair<String, Double>>[] arrTFIDF = null;
    Auxiliar aux = new Auxiliar();

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        this.setLocationRelativeTo(null);
        ac = new ActionListener() {
                    @Override
                    public void actionPerformed(java.awt.event.ActionEvent e) {
                        x = x + 1;
                        jProgressBar1.setValue(x);
                        if (jProgressBar1.getValue() == x) {
                            porcentaje.setText(String.valueOf(x) + "%");
                        }
                        if(jProgressBar1.getValue() == 1)
                            processing.setText("Cargando archivos...");
                        
                        if(jProgressBar1.getValue() == 10){
                            processing.setText("Calculando listas...");
                            stringList = aux.getListsString(arrDocs);
                        }
                        if(jProgressBar1.getValue() == 20){
                            processing.setText("Calculando IDF...");
                            ht = aux.getListsIDF(stringList);
                        }
                        if(jProgressBar1.getValue() == 30){
                            processing.setText("Calculando TF...");
                            arrTF = aux.getListsTF(stringList);
                        }
                        if(jProgressBar1.getValue() == 40){
                             processing.setText("Calculando TF-IDF...");
                            arrTFIDF = aux.getListsTFIDF(arrTF, ht);
                        }
                        if(jProgressBar1.getValue() == 41){
                             processing.setText("Procesando documentos...");
                        }
                        
                        if(jProgressBar1.getValue() == 100){
                            t.stop();
                            menu.setArrDocs(arrDocs);
                            menu.setStringList(stringList);
                            menu.setHt(ht);
                            menu.setArrTF(arrTF);
                            menu.setArrTFIDF(arrTFIDF);
                            menu.setVisible(true);
                            dispose();
                        }
                    }
                };        
        //Iniciar timer para la barra.
        t = new Timer(100, ac);
        getIconImage();
    }

    /**
     * This method change the icon of the interface
     */
    public Image getIconImage(){
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/logoMD.png"));
        return retValue;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonSalir = new javax.swing.JButton();
        askRuta = new javax.swing.JLabel();
        textRuta = new javax.swing.JTextField();
        verificarRuta = new javax.swing.JButton();
        processing = new javax.swing.JLabel();
        porcentaje = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        LabelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        botonSalir.setBackground(new java.awt.Color(102, 102, 102));
        botonSalir.setFont(new java.awt.Font("Orator Std", 0, 12)); // NOI18N
        botonSalir.setForeground(new java.awt.Color(255, 255, 255));
        botonSalir.setText("salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });
        getContentPane().add(botonSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 310, -1, 30));

        askRuta.setFont(new java.awt.Font("Orator Std", 0, 14)); // NOI18N
        askRuta.setText("Ingrese la ruta:");
        getContentPane().add(askRuta, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        textRuta.setBackground(new java.awt.Color(204, 204, 204));
        textRuta.setFont(new java.awt.Font("Orator Std", 0, 13)); // NOI18N
        textRuta.setForeground(new java.awt.Color(102, 102, 102));
        textRuta.setText("/Users/Daniel/Documentos/ExamplesTXT");
        getContentPane().add(textRuta, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 620, 40));

        verificarRuta.setBackground(new java.awt.Color(102, 102, 102));
        verificarRuta.setFont(new java.awt.Font("Orator Std", 0, 14)); // NOI18N
        verificarRuta.setForeground(new java.awt.Color(255, 255, 255));
        verificarRuta.setText("Verificar ruta");
        verificarRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verificarRutaActionPerformed(evt);
            }
        });
        getContentPane().add(verificarRuta, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 210, -1, -1));

        processing.setFont(new java.awt.Font("Orator Std", 0, 12)); // NOI18N
        processing.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        processing.setText("Sin procesar...");
        getContentPane().add(processing, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 320, 280, 30));

        porcentaje.setFont(new java.awt.Font("Orator Std", 0, 18)); // NOI18N
        porcentaje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        porcentaje.setText("0%");
        getContentPane().add(porcentaje, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 250, 60, 30));
        getContentPane().add(jProgressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 280, -1, 30));

        LabelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondo1.png"))); // NOI18N
        getContentPane().add(LabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_botonSalirActionPerformed

    private void verificarRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verificarRutaActionPerformed
        /** Clase abstracta que nos permite definir el metodo de la
	 la interface FileFilter*/
	FileFilter filter = new FileFilter() {
		public boolean accept(File file) {
		    return !file.isDirectory() && file.getName().endsWith(".txt");
		}
	    };
        
        //Obtener la ruta pasada como argumento.
        String pathName = textRuta.getText().trim();
        arrDocs = null;
        menu = null;
        try{
            //Cargar los archivos guardados en el pathName.
            File dir = new File(pathName);
            
            //Guardar los documentos en un arreglo de tipo File.
            arrDocs = dir.listFiles(filter);
            
            if(arrDocs.length == 0){
		processing.setText("No hay archivos .txt en esta ruta.");
            }else{
                
                stringList = null;
                ht = null;
                arrTF = null;
                arrTFIDF = null;
                
                /* Abrir la interfaz Menu. */
                //Interfaces que abriremos y cerraremos.
                menu = new Menu();
                
                t.start();
                
                /* Procesamiento de los archivos. 
                //Convertirlos a ArrayLists.
                stringList = aux.getListsString(arrDocs);
                System.out.println("Si los hace listas");
                //Calcular su IDF
                ht = aux.getListsIDF(stringList);
                System.out.println("Si calcula IDF");
                //Calcular su TF
                arrTF = aux.getListsTF(stringList);
                System.out.println("Si calcula TF");
                //Calcular su TFIDF
                arrTFIDF = aux.getListsTFIDF(arrTF, ht);
                System.out.println("Si calcula TFIDF");
               */
                
                /*Agregar atributos previamente ya calculados.
                menu.setArrDocs(arrDocs);
                menu.setArrTF(arrTF);
                menu.setStringList(stringList);
                menu.setHt(ht);
                menu.setArrTFIDF(arrTFIDF);
                */
                
                //menu.setVisible(true);
                //this.dispose();
            }
        }catch(Exception e){
            System.out.println(e);
            processing.setText("Ruta inválida, intente de nuevo.");
        }
    }//GEN-LAST:event_verificarRutaActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelFondo;
    private javax.swing.JLabel askRuta;
    private javax.swing.JButton botonSalir;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel porcentaje;
    private javax.swing.JLabel processing;
    private javax.swing.JTextField textRuta;
    private javax.swing.JButton verificarRuta;
    // End of variables declaration//GEN-END:variables
}
